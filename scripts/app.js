/**
 * @namespace
 * This code is an implementation of Alea algorithm; (C) 2010 Johannes Baagøe.
 * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.
 */

/**
   * @namespace
   * This code is an implementation of the ROT.js cellular map generation by Ondřej Žára, https://github.com/ondras/rot.js
   * Alea is licensed according to the http://en.wikipedia.org/wiki/MIT_License.
   */

define("eventmanager",[""],function(){function subscribe(topic,callback){topics.hasOwnProperty(topic)||(topics[topic]=[]);topics[topic].push(callback);return!0}function unsubscrive(topic,callback){if(!topics.hasOwnProperty(topic))return!1;for(var i=0,len=topics[topic].length;len>i;i++)if(topics[topic][i]===callback){topics[topic].splice(i,1);return!0}return!1}function publish(){var args=Array.prototype.slice.call(arguments),topic=args.shift();if(!topics.hasOwnProperty(topic))return!1;for(var i=0,len=topics[topic].length;len>i;i++)topics[topic][i].apply(void 0,args);return!0}topics={};return{subscribe:subscribe,unsubscrive:unsubscrive,publish:publish,topics:topics}});define("RNG",[],function(){function init(){setSeed(Date.now())}function getSeed(){return seed}function setSeed(tempSeed){tempSeed=1>tempSeed?1/tempSeed:tempSeed;seed=tempSeed;s0=(tempSeed>>>0)*frac;tempSeed=69069*tempSeed+1>>>0;s1=tempSeed*frac;tempSeed=69069*tempSeed+1>>>0;s2=tempSeed*frac;c=1}function getUniform(){var t=2091639*s0+c*frac;s0=s1;s1=s2;c=0|t;s2=t-c;return s2}function getNormal(mean,stddev){do var u=2*getUniform()-1,v=2*getUniform()-1,r=u*u+v*v;while(r>1||0==r);var gauss=u*Math.sqrt(-2*Math.log(r)/r);return(mean||0)+gauss*(stddev||1)}function getPercentage(){return 1+Math.floor(100*getUniform())}function getWeightedValue(data){var total=0;for(var id in data)total+=data[id];var random=Math.floor(getUniform()*total),part=0;for(var id in data){part+=data[id];if(part>random)return id}return null}function getState(){return[s0,s1,s2,c]}function setState(state){s0=state[0];s1=state[1];s2=state[2];c=state[3]}var seed,s0=0,s1=0,s2=0,c=0,frac=2.3283064365386963e-10;init();return{getSeed:getSeed,setSeed:setSeed,getUniform:getUniform,getNormal:getNormal,getPercentage:getPercentage,getWeightedValue:getWeightedValue,getState:getState,setState:setState}});define("graphNode",[],function(){function graphNode(x,y,type){this.data={};this.x=x;this.y=y;this.pos={x:x,y:y};this.type=type}var graphNodeType={OPEN:0,WALL:1};graphNode.prototype.toString=function(){return"["+this.x+" "+this.y+"]"};graphNode.prototype.isWall=function(){return this.type==graphNodeType.WALL};return graphNode});define("graph",["graphNode"],function(graphNode){function graph(grid){for(var nodes=[],x=0;x<grid.length;x++){nodes[x]=[];for(var y=0,row=grid[x];y<row.length;y++)nodes[x][y]=new graphNode(x,y,row[y])}this.input=grid;this.nodes=nodes}graph.prototype.toString=function(){for(var rowDebug,row,y,l,graphString="\n",nodes=this.nodes,x=0,len=nodes.length;len>x;x++){rowDebug="";row=nodes[x];for(y=0,l=row.length;l>y;y++)rowDebug+=row[y].type+" ";graphString=graphString+rowDebug+"\n"}return graphString};return graph});define("world",["RNG","underscore","graph"],function(RNG,_,graph){function init(){mapData=_.compose(runAutomatonCycle,runAutomatonCycle,superSizemap,superSizemap,runAutomatonCycle,runAutomatonCycle,randomize,fillmap)();graph=new graph(mapData)}function randomize(data){var y,x;for(y=0;height>y;y++)for(x=0;width>x;x++)data[y][x]=RNG.getUniform()<probability?1:0;return data}function fillmap(){var y,x,data=[];for(y=0;height>y;y++){data[y]=[];for(x=0;width>x;x++)data[y][x]=0}return data}function getNeighbors(data,cx,cy){for(var result=0,i=0;i<dirs.length;i++){var dir=dirs[i],x=cx+dir[0],y=cy+dir[1];0>x||x>=width||0>x||y>=width||(result+=1===data[x][y]?1:0)}return result}function runAutomatonCycle(data){for(var count=0,newmap=fillmap(),j=0;height>j;j++){var widthStep=1,widthStart=0;if(6===topology){widthStep=2;widthStart=j%2}for(var i=widthStart;width>i;i+=widthStep){count++;var cur=data[i][j],ncount=getNeighbors(data,i,j);cur&&-1!==survive.indexOf(ncount)?newmap[i][j]=1:cur||-1===born.indexOf(ncount)||(newmap[i][j]=1)}}return newmap}function superSizemap(map){for(var newmap=[],amount=2,y=0;height>y;y++)for(var yAmount=0;amount>yAmount;yAmount++){var newY=y*amount+yAmount;newmap[newY]=[];for(var x=0;width>x;x++)for(var xAmount=0;amount>xAmount;xAmount++){var newX=x*amount+xAmount;newmap[newY][newX]=map[y][x]}}width*=amount;height*=amount;return newmap}function outOfBound(posX,posY){return posX>=0&&posY>=0?width>posX?height>posY?!1:!0:!0:!0}function inBoundTile(posX,posY){if(outOfBound(posX,posY)){0>=posX?posX=0:posX>=width&&(posX=width-1);0>=posY?posY=0:posY>=height&&(posY=height-1)}return{x:posX,y:posY}}function tileIsOpen(tileIndex){return 0===mapData[tileIndex.y][tileIndex.x]?!0:!1}var graph,height=25,width=25,tileWidth=128,tileHeight=64,mapData=[],born=[5,6,7,8],survive=[4,5,6,7,8],topology=8,probability=.47,dirs=[[0,-1],[1,-1],[1,0],[1,1],[0,1],[-1,1],[-1,0],[-1,-1]];init();return{tileWidth:tileWidth,tileHeight:tileHeight,inBoundTile:inBoundTile,outOfBound:outOfBound,tileIsOpen:tileIsOpen,height:height,width:width,mapData:mapData,graph:graph}});define("standardlib",["world","eventmanager"],function(world){function s4(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}function guid(){return s4()+s4()+"-"+s4()+"-"+s4()+"-"+s4()+"-"+s4()+s4()+s4()}function isoToTwoD(posX,posY){console.log(posX,posY);var newCoordinates={};newCoordinates.x=posY+posX;newCoordinates.y=posY-posX;return newCoordinates}function twoDToIso(posX,posY){var newCoordinates={};newCoordinates.x=(posX-posY)/2;newCoordinates.y=(posX+posY)/2;return newCoordinates}function worldPosToGridPos(PosX,PosY){var gridPosX=(PosX/(world.tileWidth/2)+PosY/(world.tileHeight/2))/2-world.width/2,gridPosY=(PosY/(world.tileHeight/2)-PosX/(world.tileWidth/2))/2+world.height/2;gridPosX=Math.floor(gridPosX);gridPosY=Math.floor(gridPosY);return{x:gridPosX,y:gridPosY}}function checkWait(conditionFunction,resultFunction){var tev=setInterval(function(){conditionFunction()&&clearInterval(tev)},1e3)}return{guid:guid,isoToTwoD:isoToTwoD,twoDToIso:twoDToIso,worldPosToGridPos:worldPosToGridPos,checkWait:checkWait}});define("canvas",["eventmanager","world"],function(eventmanager,world){var terrain={},player={},init=function(){terrain.canvas=document.getElementById("mapCanvas");terrain.context=terrain.canvas.getContext("2d");player.canvas=document.getElementById("playerCanvas");player.context=player.canvas.getContext("2d");terrain.canvas.width=world.width*world.tileWidth;terrain.canvas.height=world.height*world.tileHeight;player.canvas.width=world.width*world.tileWidth;player.canvas.height=world.height*world.tileHeight};eventmanager.subscribe("game.init",function(){init()});return{terrain:terrain,player:player}});define("text!assetsList",[],function(){return'{\n  "0" : {\n    "name": "mapTiles",\n    "type": "atlas",\n    "configuration": "./art/panama.json",\n    "file": "./art/panama.png"\n  }\n}'});define("spriteSheet",[""],function(){var spriteSheet=function(confConstructor,fileConstructor){var sprites=[],configuration=confConstructor,img=fileConstructor,init=function(){_.forEach(configuration.frames,function(frame){var val=frame,cx=.5*-val.frame.w,cy=.5*-val.frame.h;if(val.trimmed){cx=val.spriteSourceSize.x-.5*val.sourceSize.w;cy=val.spriteSourceSize.y-.5*val.sourceSize.h}defsprite(val.filename,val.frame.x,val.frame.y,val.frame.w,val.frame.h,cx,cy)})},defsprite=function(name,x,y,w,h,cx,cy){var spt={id:name,x:x,y:y,w:w,h:h,cx:null===cx?0:cx,cy:null===cy?0:cy};sprites.push(spt)};init();return{img:img,sprites:sprites}};return spriteSheet});define("assetLoader",["spriteSheet","underscore","jQuery"],function(spriteSheet){var preloadassets=function(assets){var that=this;_.forEach(assets.config,function(asset){that.queue++;switch(asset.type){case"atlas":that.loadAtlas(asset,function(loadedAsset){assets.loaded.atlas.push({name:asset.name,sprite:new spriteSheet(loadedAsset.configuration,loadedAsset.file)});that.queue--});break;case"music":}});return assets},preloadComplete=function(){return this.queue>0?!1:!0},loadAtlas=function(asset,callback){jQuery.getJSON(asset.configuration,function(data){asset.configuration=data}).then(function(){var img=new Image;img.src=asset.file;asset.file=img;callback(asset)})};return{preloadassets:preloadassets,preloadComplete:preloadComplete,loadAtlas:loadAtlas}});define("assets",["text!assetsList","assetLoader","eventmanager"],function(AssetList,assetLoader,eventmanager){function checkassetLoader(){var tev=setInterval(function(){if(assetLoader.preloadComplete()){eventmanager.publish("assets.loaded");clearInterval(tev)}},1e3)}var assets={config:{},loaded:{atlas:[],music:[]}};assets.config=JSON.parse(AssetList);assets=assetLoader.preloadassets(assets);checkassetLoader();return assets});define("sprite",["underscore","canvas","standardlib","world","assets"],function(_,canvases,standardlib,world,assets){function draw(spriteName,posX,posY,layer){var spt,context,coordinates,canvas,img,mapTrans={};switch(layer){case"terrain":context=canvases.terrain.context;canvas=canvases.terrain.canvas;break;case"player":context=canvases.player.context;canvas=canvases.player.canvas;break;default:return}coordinates=standardlib.twoDToIso(posX,posY);coordinates.x=coordinates.x*world.tileWidth+canvas.width/2;coordinates.y=coordinates.y*world.tileHeight+world.tileHeight/2;_.findIndex(assets.loaded.atlas,function(sheet){spt=_.findWhere(sheet.sprite.sprites,{id:spriteName});img=sheet.sprite.img;!_.isEmpty(sheet)});if(!_.isEmpty(spt)){mapTrans.x=0;mapTrans.y=0;context.drawImage(img,spt.x,spt.y,spt.w,spt.h,coordinates.x-world.tileWidth/2,coordinates.y-world.tileHeight/2,world.tileWidth,world.tileHeight)}}return{draw:draw}});define("actorList",["eventmanager","sprite","underscore"],function(eventmanager){var actorList=[],CleanupList=[],playerUuid="";eventmanager.subscribe("actor.create",function(actor){actorList.push({uuid:actor.uuid,coordinates:actor.coordinates,sprite:actor.sprite})});eventmanager.subscribe("actor.update",function(actor){var oldActor=_.findWhere(actorList,{uuid:actor.uuid});CleanupList.push({coordinates:oldActor.coordinates});actorList=_.without(actorList,oldActor);actorList.push({uuid:actor.uuid,coordinates:actor.coordinates,sprite:actor.sprite})});eventmanager.subscribe("actor.delete",function(uuid){var Actor=_.findWhere(actorList,{uuid:uuid});CleanupList.push({coordinates:Actor.coordinates});actorList=_.without(actorList,Actor)});var getActorList=function(){return actorList},getCleanUpList=function(){return CleanupList},clearCleanUpList=function(){CleanupList=[]},getPlayerUuid=function(){return playerUuid};return{getCleanUpList:getCleanUpList,clearCleanUpList:clearCleanUpList,getActorList:getActorList,getPlayerUuid:getPlayerUuid}});define("actor",["eventmanager","standardlib","actorList"],function(eventmanager,standardlib){function Actor(sprite,coordinates){this.coordinates=coordinates;this.sprite=sprite;this.uuid=standardlib.guid();this.hp=0}Actor.prototype.checkLeftClick=function(e){if(e.x==this.coordinates.x&&e.y==this.coordinates.y){this.selected=!0;eventmanager.publish("actor.selected",this.uuid)}else if(this.selected){this.selected=!1;eventmanager.publish("actor.unselected",this.uuid)}};Actor.prototype.delete=function(){eventmanager.publish("actor.delete",this.uuid)};return Actor});define("binaryHeap",[""],function(){function binaryHeap(scoreFunction){this.content=[];this.scoreFunction=scoreFunction}binaryHeap.prototype={push:function(element){this.content.push(element);this.sinkDown(this.content.length-1)},pop:function(){var result=this.content[0],end=this.content.pop();if(this.content.length>0){this.content[0]=end;this.bubbleUp(0)}return result},remove:function(node){var i=this.content.indexOf(node),end=this.content.pop();if(i!==this.content.length-1){this.content[i]=end;this.scoreFunction(end)<this.scoreFunction(node)?this.sinkDown(i):this.bubbleUp(i)}},size:function(){return this.content.length},rescoreElement:function(node){this.sinkDown(this.content.indexOf(node))},sinkDown:function(n){for(var element=this.content[n];n>0;){var parentN=(n+1>>1)-1,parent=this.content[parentN];if(!(this.scoreFunction(element)<this.scoreFunction(parent)))break;this.content[parentN]=element;this.content[n]=parent;n=parentN}},bubbleUp:function(n){for(var length=this.content.length,element=this.content[n],elemScore=this.scoreFunction(element);;){var child2N=n+1<<1,child1N=child2N-1,swap=null;if(length>child1N){var child1=this.content[child1N],child1Score=this.scoreFunction(child1);elemScore>child1Score&&(swap=child1N)}if(length>child2N){var child2=this.content[child2N],child2Score=this.scoreFunction(child2);(null===swap?elemScore:child1Score)>child2Score&&(swap=child2N)}if(null===swap)break;this.content[n]=this.content[swap];this.content[swap]=element;n=swap}}};return binaryHeap});define("astar",["binaryHeap"],function(binaryHeap){var astar={init:function(grid){for(var x=0,xl=grid.length;xl>x;x++)for(var y=0,yl=grid[x].length;yl>y;y++){var node=grid[x][y];node.f=0;node.g=0;node.h=0;node.cost=node.type;node.visited=!1;node.closed=!1;node.parent=null}},heap:function(){return new binaryHeap(function(node){return node.f})},search:function(grid,start,end,diagonal,heuristic){astar.init(grid);heuristic=heuristic||astar.manhattan;diagonal=!!diagonal;var openHeap=astar.heap();openHeap.push(start);for(;openHeap.size()>0;){var currentNode=openHeap.pop();if(currentNode===end){for(var curr=currentNode,ret=[];curr.parent;){ret.push(curr);curr=curr.parent}return ret.reverse()}currentNode.closed=!0;for(var neighbors=astar.neighbors(grid,currentNode,diagonal),i=0,il=neighbors.length;il>i;i++){var neighbor=neighbors[i];if(!neighbor.closed&&!neighbor.isWall()){var gScore=currentNode.g+neighbor.cost,beenVisited=neighbor.visited;if(!beenVisited||gScore<neighbor.g){neighbor.visited=!0;neighbor.parent=currentNode;neighbor.h=neighbor.h||heuristic(neighbor.pos,end.pos);neighbor.g=gScore;neighbor.f=neighbor.g+neighbor.h;beenVisited?openHeap.rescoreElement(neighbor):openHeap.push(neighbor)}}}}return[]},manhattan:function(pos0,pos1){var d1=Math.abs(pos1.x-pos0.x),d2=Math.abs(pos1.y-pos0.y);return d1+d2},neighbors:function(grid,node,diagonals){var ret=[],x=node.x,y=node.y;grid[x-1]&&grid[x-1][y]&&ret.push(grid[x-1][y]);grid[x+1]&&grid[x+1][y]&&ret.push(grid[x+1][y]);grid[x]&&grid[x][y-1]&&ret.push(grid[x][y-1]);grid[x]&&grid[x][y+1]&&ret.push(grid[x][y+1]);if(diagonals){grid[x-1]&&grid[x-1][y-1]&&ret.push(grid[x-1][y-1]);grid[x+1]&&grid[x+1][y-1]&&ret.push(grid[x+1][y-1]);grid[x-1]&&grid[x-1][y+1]&&ret.push(grid[x-1][y+1]);grid[x+1]&&grid[x+1][y+1]&&ret.push(grid[x+1][y+1])}return ret}};return astar});define("actor.unit",["actor","eventmanager","astar","world","underscore"],function(actor,eventmanager,astar,world){function unit(sprite,coordinates){_.extend(this,new actor(sprite,coordinates));this.path=[];this.focus="";this.strenght=0;this.dexterity=0;this.intelligence=0;this.health=0;this.death=!1;this.hp=50;this.attack=10}unit.prototype=Object.create(actor.prototype);unit.prototype.generatePath=function(){var start=world.graph.nodes[this.coordinates.y][this.coordinates.x],end=world.graph.nodes[this.goal.y][this.goal.x];this.path=astar.search(world.graph.nodes,start,end,!0)};unit.prototype.move=function(){if(0!==this.path.length){var first=_.first(this.path);this.path=_.rest(this.path);this.coordinates={x:first.y,y:first.x};eventmanager.publish("command",{event:"actor.update",parameters:this})}};unit.prototype.checkDeath=function(){if(this.hp<=0&&!this.death){this.death=!0;this.delete()}};unit.prototype.attackActor=function(){if(""!==this.focus){console.log("pew "+this.attack+" damage");eventmanager.publish("command",{event:"actor.attack."+this.focus,parameters:this.attack})}};return unit});define("actor.unit.human",["actor.unit","eventmanager"],function(unit){function human(sprite,coordinates){_.extend(this,new unit(sprite,coordinates))}human.prototype=Object.create(unit.prototype);return human});define("actor.unit.human.local",["actor.unit.human","eventmanager"],function(human,eventmanager){function local(sprite,coordinates){_.extend(this,new human(sprite,coordinates));this.focus="";var that=this;eventmanager.subscribe("mouse.click.right",function(e){that.checkRightClick(e)});eventmanager.subscribe("mouse.click.left",function(e){that.checkLeftClick(e)});eventmanager.subscribe("new.gamecycle",function(){that.move();that.attackActor();that.checkDeath()});eventmanager.subscribe("actor.selected",function(uuid){that.focus=uuid});eventmanager.subscribe("actor.unselected",function(uuid){that.focus===uuid&&(that.focus="")});eventmanager.subscribe("actor.delete",function(uuid){that.focus===uuid&&(that.focus="")});eventmanager.subscribe("actor.attack."+that.uuid,function(damage){that.hp=that.hp-parseInt(damage)});eventmanager.publish("actor.create",this)}local.prototype=Object.create(human.prototype);local.prototype.checkRightClick=function(e){this.goal=e;this.generatePath()};return local});define("player",["eventmanager","actor.unit.human.local"],function(eventmanager,human){var player=new human("road.png",{x:5,y:5}),getInfo=function(){return player};return{getInfo:getInfo}});define("scripts/app/controllers/uiController",["eventmanager","player"],function(eventmanager,player){ActorController=function($scope){$scope.player=player.getInfo();$scope.$watch("player");eventmanager.subscribe("new.gamecycle",function(){$scope.player=player.getInfo();$scope.$apply()})};return["$scope","$interval",ActorController]});define("scripts/app/controllers/gameController",["eventmanager"],function(){gameController=function(){};return["$scope",gameController]});define("scripts/app/controllers/CanvasController",["eventmanager"],function(eventmanager){canvasController=function(){eventmanager.publish("game.init")};return["$scope",canvasController]});define("commandQueue",[""],function(){function add(command){list.push(command)}function clear(){list=[]}function get(){return list}var list=[];return{add:add,get:get,clear:clear}});define("command",["commandQueue","eventmanager"],function(commandQueue,eventmanager){function newcommand(command){commandQueue.add(command)}function executeQueue(){var list=commandQueue.get();_.forEach(list,function(command){eventmanager.publish(command.event,command.parameters)});commandQueue.clear()}eventmanager.subscribe("command",function(e){newcommand(e)});eventmanager.subscribe("new.gamecycle",function(){executeQueue()})});define("gamecycle",["eventmanager","command"],function(eventmanager){function init(){gameCycle()}function gameCycle(){setTimeout(gameCycle,200);eventmanager.publish("new.gamecycle")}eventmanager.subscribe("game.init",function(){init()})});define("RequestAnimationFrame",[""],function(){window.requestAnimFrame=function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback){window.setTimeout(callback,1e3/16.5)}}()});define("map",["eventmanager","canvas","world","standardlib","sprite","jQuery"],function(eventmanager,canvas,world,standardlib,sprite){function init(){draw();center(centerCoordinates.x,centerCoordinates.y)}function draw(){canvas.terrain.context.clearRect(0,0,canvas.terrain.canvas.width,canvas.terrain.canvas.height);for(var coordinates={x:0,y:0},i=0;world.height>i;i++)for(var j=0;world.width>j;j++)world.outOfBound(coordinates.y+i,coordinates.x+j)||(1===world.mapData[coordinates.y+i][coordinates.x+j]?sprite.draw("grass.png",coordinates.x+j,coordinates.y+i,"terrain"):sprite.draw("water.png",coordinates.x+j,coordinates.y+i,"terrain"))}function center(posX,posY){var coordinates=standardlib.twoDToIso(posX,posY);coordinates.x=-((coordinates.x-visible.x)*world.tileWidth+canvas.terrain.canvas.width/2);coordinates.y=-((coordinates.y-visible.y)*world.tileHeight+world.tileHeight/2);$(canvas.terrain.canvas).css("margin-left",coordinates.x).css("marginTop",coordinates.y);$(canvas.terrain.canvas).css("margin-left",coordinates.x).css("marginTop",coordinates.y)}function update(){var inbound={x:0,y:0};if(1==pressedkeys.up){inbound.y--;inbound.x--}if(1==pressedkeys.down){inbound.y++;inbound.x++}if(1==pressedkeys.left){inbound.x--;inbound.y++}if(1==pressedkeys.right){inbound.x++;inbound.y--}if(0!==inbound.x||0!==inbound.y){inbound=world.inBoundTile(centerCoordinates.x+inbound.x,centerCoordinates.y+inbound.y);center(inbound.x,inbound.y);centerCoordinates.x=inbound.x;centerCoordinates.y=inbound.y}}var visible={x:10,y:10},centerCoordinates={x:10,y:10},pressedkeys={up:0,down:0,left:0,right:0};eventmanager.subscribe("game.init",function(){init()});eventmanager.subscribe("new.frame",function(){update()});eventmanager.subscribe("pan.up",function(e){pressedkeys.up=e});eventmanager.subscribe("pan.down",function(e){pressedkeys.down=e});eventmanager.subscribe("pan.left",function(e){pressedkeys.left=e});eventmanager.subscribe("pan.right",function(e){pressedkeys.right=e})});define("actors",["eventmanager","sprite","standardlib","world","canvas","actorList","underscore"],function(eventmanager,sprite,standardlib,world,canvas,actorList){function init(){center(centerCoordinates.x,centerCoordinates.y)}function update(){var inbound={x:0,y:0};if(1==pressedkeys.up){inbound.y--;inbound.x--}if(1==pressedkeys.down){inbound.y++;inbound.x++}if(1==pressedkeys.left){inbound.x--;inbound.y++}if(1==pressedkeys.right){inbound.x++;inbound.y--}if(0!==inbound.x||0!==inbound.y){inbound=world.inBoundTile(centerCoordinates.x+inbound.x,centerCoordinates.y+inbound.y);center(inbound.x,inbound.y);centerCoordinates.x=inbound.x;centerCoordinates.y=inbound.y}_.each(actorList.getCleanUpList(),function(actor){sprite.draw("water.png",actor.coordinates.x,actor.coordinates.y,"player")});actorList.clearCleanUpList();_.each(actorList.getActorList(),function(actor){sprite.draw(actor.sprite,actor.coordinates.x,actor.coordinates.y,"player")})}function center(posX,posY){var coordinates=standardlib.twoDToIso(posX,posY);coordinates.x=-((coordinates.x-visible.x)*world.tileWidth+canvas.player.canvas.width/2);coordinates.y=-((coordinates.y-visible.y)*world.tileHeight+world.tileHeight/2);$(canvas.player.canvas).css("margin-left",coordinates.x).css("marginTop",coordinates.y);$(canvas.terrain.canvas).css("margin-left",coordinates.x).css("marginTop",coordinates.y)}var visible={x:10,y:10},centerCoordinates={x:10,y:10},pressedkeys={up:0,down:0,left:0,right:0};eventmanager.subscribe("new.frame",function(){update()});eventmanager.subscribe("pan.up",function(e){pressedkeys.up=e});eventmanager.subscribe("pan.down",function(e){pressedkeys.down=e});eventmanager.subscribe("pan.left",function(e){pressedkeys.left=e});eventmanager.subscribe("pan.right",function(e){pressedkeys.right=e});eventmanager.subscribe("game.init",function(){init()})});define("animate",["eventmanager","RequestAnimationFrame","map","actors"],function(eventmanager){function animate(){eventmanager.publish("new.frame");window.setTimeout(animate,50)}eventmanager.subscribe("game.init",function(){animate()});return{}});define("mouse",["canvas","standardlib","eventmanager"],function(canvas,standardlib,eventmanager){function setLeftmouseCallback(newCallback){leftmouseCallback=newCallback}function setRightmouseCallback(newCallback){rightmouseCallback=newCallback}var leftmouseCallback=function(){console.log("The right mouse click is not assigned, define leftmouseCallback")},rightmouseCallback=function(){console.log("The left mouse click is not assigned, define rightmouseCallback")};HTMLCanvasElement.prototype.relmouseCoordinates=function(event){var totalOffsetX=0,totalOffsetY=0,canvasX=0,canvasY=0,currentElement=this;do{totalOffsetX+=currentElement.offsetLeft-currentElement.scrollLeft;totalOffsetY+=currentElement.offsetTop-currentElement.scrollTop}while(currentElement===currentElement.offsetParent);canvasX=event.pageX-totalOffsetX;canvasY=event.pageY-totalOffsetY;return{x:canvasX,y:canvasY}};window.oncontextmenu=function(event){event.preventDefault();event.stopPropagation();return!1};var init=function(){canvas.player.canvas.addEventListener("click",function(e){var coordinates=canvas.player.canvas.relmouseCoordinates(e);coordinates=standardlib.worldPosToGridPos(coordinates.x,coordinates.y,canvas.player.canvas.width);leftmouseCallback(coordinates)},!1);canvas.player.canvas.addEventListener("contextmenu",function(e){var coordinates=canvas.player.canvas.relmouseCoordinates(e);coordinates=standardlib.worldPosToGridPos(coordinates.x,coordinates.y,canvas.player.canvas.width);rightmouseCallback(coordinates)},!1)};eventmanager.subscribe("game.init",function(){init()});return{setLeftmouseCallback:setLeftmouseCallback,setRightmouseCallback:setRightmouseCallback}});define("input",["eventmanager","mouse","keypress"],function(eventmanager,mouse){var my_combos=[{keys:"up",prevent_repeat:!0,on_keydown:function(){eventmanager.publish("pan.up",1)},on_keyup:function(){eventmanager.publish("pan.up",0)}},{keys:"down",prevent_repeat:!0,on_keydown:function(){eventmanager.publish("pan.down",1)},on_keyup:function(){eventmanager.publish("pan.down",0)}},{keys:"left",prevent_repeat:!0,on_keydown:function(){eventmanager.publish("pan.left",1)},on_keyup:function(){eventmanager.publish("pan.left",0)}},{keys:"right",prevent_repeat:!0,on_keydown:function(){eventmanager.publish("pan.right",1)},on_keyup:function(){eventmanager.publish("pan.right",0)}}];keypress.register_many(my_combos);mouse.setLeftmouseCallback(function(e){eventmanager.publish("mouse.click.left",e)});mouse.setRightmouseCallback(function(e){eventmanager.publish("mouse.click.right",e)})});define("scripts/app",["scripts/app/controllers/uiController","scripts/app/controllers/gameController","scripts/app/controllers/CanvasController","angular","angular-ui-router","gamecycle","assets","animate","input","player"],function(uiController,gameController,CanvasController){var app=angular.module("panama",["ui.router"]);app.config(function($stateProvider){$stateProvider.state("menu",{templateUrl:"templates/menu.html"}).state("game",{"abstract":!0,templateUrl:"templates/game.html",controller:"gameController"}).state("game.content",{views:{canvas:{templateUrl:"templates/game.canvas.html",controller:"canvasController"},actor:{templateUrl:"templates/game.ui.html",controller:"uiController"}}})});app.controller("uiController",uiController);app.controller("gameController",gameController);app.controller("canvasController",CanvasController);app.run(["$state",function($state){$state.transitionTo("menu")}]);angular.element(document).ready(function(){angular.bootstrap(document,["panama"])});return app});